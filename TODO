DONE:
- refactor names in SimulationCanvasController to be more descriptive
- extract responsibility to ProjectionMatrix class (Projection2D)
- refactor DrawSquareLogicElementVisitor to avoid repetition
- extract drawing class from SimulationCanvasController - this class is too big and has too many responsibilities
- remove unused function
- fix DrawingManager to depend less on the CanvasController (not using CanvasController.logicElementDragged)
- rename 2DList to Grid - better describes the intent
- divide ArrayWireGrid into two classes: 1. wire management (set Wire, getWire etc) 2. propagation
- unboundGrid should throw an exception when pos is null
- refactor defining events in fxml to defining them in code - it should be cleaner
- divide SimulationCanvasController into Controller and a separate Event Handler class
- refactor BoardDrawer, BoardEventHandler na CanvasController to use one object with necessary variables
- extract what possible from BoardDTO to particular classes (if only one class uses it, it should be in that class)
- drawing FPS and UPS in the canvas, because the canvas class shouldn't have access to the main App class
- limiting UPS from keyboard during run
- Make moving fun.
- bug - clock nie outputuje w dol, ( z bramki generator zawsze jest poziomo )
- create separate branches for java 11 and java 8 + readme stating what's necessary to run it
- make the logo empty space smaller
- remove Node class dependency in NodeHandler
- embed fonts, because on windows it appears as a different font
- refactor tests/add more tests
- popraw bug - brak maksymalizacji okna grid
- lepsze przesuwanie bramek (bramka długości 2 nie przeskakuje przy przeciąganiu za końcowy róg)
- Zrób node crossing toucing by default and Only draw crossing when 3 or more wires around
- dodawanie bramek przez przeciąganie z toolboxa z boku
DOING:

TODO: zapisywanie i czytanie z pliku

TO BE DONE:
TODO: zaznaczanie wielu elementów i przesuwnie ich, kopiowanie oraz usuwanie
TODO: ctrl-z, ctrl-shift-z
TODO: blokowanie doddawania przewodów i bramek na istniejących już bramkach i przewodach
TODO: dodaj graficzne opisy wejść i wyjść
TODO: windowSwitcher in all controllers or as a Singleton
TODO: Create an interface for Simulation and it should be the only accessible thing in the package, somehow hide as much in the SimulationPackage (module system)
NOTE: jest funkcja loader.setController()
MAYBE:
TODO: generic Vector2D
TODO: allow for removing elements from NodeGrid and UnboundList (if the app takes too much memory)
TODO: actually use 2d array to store elements, but maintain two representations
    2d array representation would allow for fast point access
    list representation would allow for fast drawing
TODO: Simulation should have visitors for drawing (code smell G14 in Clean Code) or maybe not. Iterators are good enough. We will see

NOT DONE:
- Set up makefile so that it creates a jar file in root folder
- create new faster UnboundGrid (it was supposed to be an arraylist, but going through all the nulls took a while so it was slower than hashmap)
- create a proxy for the Unbound2DList that returns empty objects instead of nulls OR rewrite Unbound2DList for it ||| Should just make ArrayWireGrid smaller
- remove the iterator2D because it's unnecessary - the Node contains position information
    so it's unnecessary to output position separately ||| Not done because we have this unbounded array of elements. We set and get them with vector2D
    but when we want to use iterator we lose that information.