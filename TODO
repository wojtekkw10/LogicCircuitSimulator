DONE:
- refactor names in SimulationCanvasController to be more descriptive
- extract responsibility to ProjectionMatrix class (Projection2D)
- refactor DrawSquareLogicElementVisitor to avoid repetition
- extract drawing class from SimulationCanvasController - this class is too big and has too many responsibilities
- remove unused function
- fix DrawingManager to depend less on the CanvasController (not using CanvasController.logicElementDragged)
- rename 2DList to Grid - better describes the intent
- divide ArrayWireGrid into two classes: 1. wire management (set Wire, getWire etc) 2. propagation
- unboundGrid should throw an exception when pos is null
- refactor defining events in fxml to defining them in code - it should be cleaner
- divide SimulationCanvasController into Controller and a separate Event Handler class
- refactor BoardDrawer, BoardEventHandler na CanvasController to use one object with necessary variables

DOING:

- extract what possible from BoardDTO to particular classes (if only one class uses it, it should be in that class)

TO BE DONE:
TODO: drawing FPS and UPS in the canvas, because the canvas class shouldn't have access to the main App class

TODO: refactor tests

TODO: create an array of references to logicGates on the board to facilitate moving the logic gates, without it it's hard to find
    which gate is clicked
TODO: create new faster UnboundGrid


MAYBE:
TODO: allow for removing elements from NodeGrid and UnboundList (if the app takes too much memory)

NOT DONE:
- create a proxy for the Unbound2DList that returns empty objects instead of nulls OR rewrite Unbound2DList for it ||| Should just make ArrayWireGrid smaller
- remove the iterator2D because it's unnecessary - the Node contains position information
    so it's unnecessary to output position separately ||| Not done because we have this unbounded array of elements. We set and get them with vector2D
    but when we want to use iterator we lose that information.